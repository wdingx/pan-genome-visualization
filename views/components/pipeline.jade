doctype html
html
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    link(rel='stylesheet', type='text/css', href='stylesheets/bootstrap.min.css', media='screen')
    link(rel='stylesheet', type='text/css', href='stylesheets/autohiding-navbar2.css', media='screen')
    link(rel='stylesheet', type='text/css', href='stylesheets/footer.css')
    link(type='text/css', rel='stylesheet', href='stylesheets/page-appearance.css')
    link(rel='stylesheet', type='text/css', href='http://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css')
    title panX

  body
    include navbar_pipeline
    .container
      br
      br
      .row
        nav#myScrollspy.col-sm-2
          ul.nav.nav-pills.nav-stacked.fixed-dropdown
            li.active
              a(href='#overview')  Pipeline overview
            li
              a(href='#JS') JavaScript libraries
            li
              a(href='#DIAMOND') DIAMOND
            li
              a(href='#MCL') MCL
        .col-sm-6.panX-text
          br
          .alert.alert-info(role='alert') Pipeline overview
          #overview
            p
              b Input:
              strong  RefSeq
              |  records from NCBI/
              strong  user's own genome sequences (GenBank format)
            p
              b Clustering: DIAMOND + MCL + phylogeny-based post-processing
            .item
              figure
                img(src='./images/panX-pipeline.png', alt='...', style='width:100%;')
                br
                br
                figcaption
                  p.narrow Fig.1 An overview of pan-genome analysis and visualization pipeline.
                  p.narrow
                    b  panX analysis pipeline
                    |  is based on DIAMOND, MCL and phylogeny-aware post-processing to determine clusters of orthologous genes from a collection of annotated genomes. panX generates a strain/species tree based on core genome SNPs and a gene tree for each gene cluster.
                  p.narrow
                    b panX interactive visualization:
                  p.narrow
                    b (1)
                    |  The dynamic pan-genome statistical charts allow rapid filtering and selection of gene subsets in cluster table;
                  p.narrow clicking a gene cluster in cluster table loads
                    b  (2)
                    |  related alignment,
                    b  (3)
                    |  individual gene tree and
                    b  (4)
                    |  gene presence/absence and gain/loss pattern on strain/species tree;
                  p.narrow
                    b  (5)
                    |  Selecting sequences in alignment highlights associated strains on strain/species tree;
                  p.narrow
                    b  (6) (7)
                    |  Strain/species tree interacts with gene tree in various ways;
                  p.narrow
                    b  (8)
                    |  Zooming into a clade on strain/species tree screens strains in metadata table;
                  p.narrow
                    b  (9)
                    |  Searching in metadata table display strains pertinent to specific meta-information.
          br
          .alert.alert-info(role='alert') JavaScript libraries
          #JS
            p
              b Interactive charts:
              a(href='https://dc-js.github.io/dc.js/')
                u dc.js
              |  (interactive charting JS library based on
              a(href="http://square.github.io/crossfilter/")
                u crossfilter
              |  and
              a(href="https://d3js.org/")
                u d3
              | )
              i.fa.fa-heart(aria-hidden='true',style='color:red;')
              a(href="https://github.com/gordonwoodhull")
                u Gordon Woodhull's
              |  support and advice highly appreciated!
            p
              b Data tables:
              a(href="https://datatables.net/")
                u DataTables
              |  plug-in for the enhancement of data accessibility
            p
              b Alignment:
              a(href="http://msa.biojs.net/")
                u MSA
              |  (multiple sequence alignment JS library)
            p
              b Phylogenetic tree:
              a(href="https://github.com/nextstrain/phyloTree")
                u PhyloTree
              |  (highly flexible tree visualization JS library) crafted by
              a(href="https://github.com/neherlab")
               u Richard Neher
          br
          #DIAMOND
            .alert.alert-info(role='alert') DIAMOND
            p
              b The all-against-all comparison of protein sequences
              |  from all strains is performed by the fast and sensitive protein alignment tool
              a(href='https://github.com/bbuchfink/diamond')
                u DIAMOND
              a(href='http://www.nature.com/nmeth/journal/v12/n1/full/nmeth.3176.html')
                u (Buchfink et al. 2015 Nature Methods)
              | , which applies a double indexing method to compute the list of seed and location information in both queries and references.
            .item
              figure
                img(src='./images/diamond.png', alt='...', style='width:100%')
                figcaption
                  | Fig.2 DIAMOND, a double indexing approach using the list of seed and their location in both queries and references.
                a(href='http://ab.inf.uni-tuebingen.de/teaching/ws14/bioinf/13-BeyondBlast.pdf')
                  u Image credit: Lecture notes by Daniel Huson, TÃ¼bingen University
          br
          #MCL
            .alert.alert-info(role='alert') MCL
            p The sequence similarly matrix using bit-score from the DIAMOND output serves as input for the Markov Clustering Algorithm (MCL) to create the clusters of homologous genes.
            p Afterwards, the clusters are post-processed by splitting clusters that involve distantly related sequences and contain a large number of paralogs.
            .item
              figure
                img(src='./images/mcl-svg.jpg', style='width:547px;height:496px;')
                figcaption Fig.4 Graph clustering using Markov chain and flow simulation (MCL).
              a(href='http://micans.org/mcl/index.html?sec_thesisetc')
                u
                  | Image Credit: Stijn van Dongen, Graph Clustering by Flow Simulation. PhD thesis, University of Utrecht, May 2000.
              br
              br
              a(href='https://www.cs.ucsb.edu/~xyan/classes/CS595D-2009winter/MCL_Presentation2.pdf')
                u Lecture notes on MCL by Kathy Macropol, Arcadia University
    include footer
    script(src='javascripts/third_party/jquery.min.js')
    script(src='javascripts/third_party/bootstrap.min.js')
    script(src='javascripts/third_party/jquery.bootstrap-autohidingnavbar.min.js')
    script(src='javascripts/third_party/call-autohidingnavbar.js')
